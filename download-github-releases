#!/usr/bin/env python3

import argparse
import logging
import os
import shutil
import subprocess
import sys


verbose = '--verbose' in sys.argv[1:] or '-v' in sys.argv[1:]
logging.basicConfig(level=logging.DEBUG if verbose else logging.INFO, format="[%(levelname)s] %(message)s")


class Release(object):

    def __init__(self, title, status, tag, date):
        self.title = title,
        self.statuts = status
        self.tag = tag
        self.date = date

    def __str__(self):
        return self.tag


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("destination")
    options = parser.parse_args()
    destination = os.path.abspath(options.destination)
    releases = subprocess.check_output(["gh", "release", "list"]).decode("utf-8").strip().split("\n")
    releases = [Release(*(release.split("\t"))) for release in releases]
    for release in releases:
        release_path = os.path.join(destination, release.tag)
        if os.path.exists(release_path):
            logging.debug("Skipping '%s'...", release.tag)
            continue
        try:
            os.makedirs(release_path)
            logging.info("Downloading '%s'...", release.tag)
            subprocess.check_call(["gh", "release", "download", release.tag, "--dir", release_path])
        except:
            shutil.rmtree(release_path)


if __name__ == "__main__":
    main()
